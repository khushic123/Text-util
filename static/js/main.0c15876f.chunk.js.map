{"version":3,"sources":["Components/Navbar.js","Components/Wc.js","Components/Findtext.js","Components/Textform.js","Components/Alert.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","className","mode","href","title","type","id","to","home","about","onClick","togglemode","htmlFor","style","btntext","defaultProps","wordschar","para","length","color","split","find","content","includes","word","Text","useState","text","setText","text1","setText1","heading","rows","value","onChange","event","console","log","target","backgroundColor","newtext","toUpperCase","showalert","toLowerCase","replace","trim","navigator","clipboard","writeText","Wc","Findtext","alert","role","msg","class","src","alt","App","setmode","setbtntext","setmystyle","setAlert","message","setTimeout","Navbar","document","body","Alert","path","About","Textform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mOAEA,SAASA,EAAIC,GAGT,OACA,mCAEA,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,kBAAkB,eAAa,OAAOM,GAAG,IAA5D,SAAiEP,EAAMQ,SAEzE,oBAAIP,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,kBAAkB,eAAa,OAAOM,GAAG,SAA5D,SAAsEP,EAAMS,aAQtF,sBAAKR,UAAU,yBAAf,UACA,uBAAOA,UAAU,mBAAmBI,KAAK,WAAWC,GAAG,yBAAyBI,QAASV,EAAMW,aAC/F,wBAAOV,UAAU,mBAAmBW,QAAQ,yBAAyBC,MAAOb,EAAMa,MAAlF,cAA2Fb,EAAMc,QAAjG,oBAYFf,EAAIgB,aAAa,CAEbX,MAAO,YACPI,KAAM,OACNC,MAAO,SAGIV,QCrCAiB,MAVf,SAAmBhB,GACf,OAAsB,GAAnBA,EAAMiB,KAAKC,OAEV,mBAAGL,MAAO,CAACM,MAAoB,SAAbnB,EAAME,KAAc,QAAQ,SAA9C,wCAIA,oBAAGW,MAAO,CAACM,MAAoB,SAAbnB,EAAME,KAAc,QAAQ,SAA9C,cAA0DF,EAAMiB,KAAKG,MAAM,KAAKF,OAAhF,cAAmGlB,EAAMiB,KAAKC,OAA9G,mBCGOG,MAVf,SAAcrB,GACV,OAAGA,EAAMsB,QAAQC,SAASvB,EAAMwB,MAE5B,mBAAGX,MAAO,CAACM,MAAoB,SAAbnB,EAAME,KAAc,QAAQ,SAA9C,mBAIA,mBAAGW,MAAO,CAACM,MAAoB,SAAbnB,EAAME,KAAc,QAAQ,SAA9C,yBC+DOuB,MApEf,SAAczB,GAEV,IAiCA,EAAqB0B,mBAAS,wBAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAuBF,mBAAS,IAAhC,mBAAOG,EAAP,KAAaC,EAAb,KACA,OACI,qCACA,sBAAK7B,UAAU,OAAf,UACA,qBAAIY,MAAO,CAACM,MAAoB,SAAbnB,EAAME,KAAc,QAAQ,SAA/C,cAA2DF,EAAM+B,QAAjE,OAEN,0BAAU9B,UAAU,eAAeK,GAAG,8BAA8B0B,KAAK,KAAKC,MAAON,EAAMO,SAlCpE,SAACC,GAClBC,QAAQC,IAAI,aACZT,EAAQO,EAAMG,OAAOL,QAgC0FpB,MAAO,CAAC0B,gBAA8B,SAAbvC,EAAME,KAAc,UAAU,QAASiB,MAAoB,SAAbnB,EAAME,KAAc,QAAQ,WACxN,wBAAQD,UAAU,kBAAkBS,QAzCT,WACrB0B,QAAQC,IAAI,gCAAiCV,GAC7C,IAAIa,EAAQb,EAAKc,cACjBb,EAAQY,GACRxC,EAAM0C,UAAU,4BAA4B,YAqClD,mCACA,wBAAQzC,UAAU,kBAAkBS,QA3BT,WACrB0B,QAAQC,IAAI,gCAAiCV,GAC7C,IAAIa,EAAQb,EAAKgB,cACjBf,EAAQY,GACRxC,EAAM0C,UAAU,4BAA4B,YAuBlD,mCACA,wBAAQzC,UAAU,kBAAkBS,QArBd,WAChB,IAAI8B,EAAUb,EAAKiB,QAAQ,OAAQ,KAAKC,OACxCjB,EAAQY,GACRxC,EAAM0C,UAAU,yBAAyB,YAkB/C,iCACA,wBAAQzC,UAAU,kBAAkBS,QAjBZ,SAACyB,GACXP,EAAQO,EAAMG,OAAOL,OACTa,UAAUC,UAAUC,UAAUrB,GAC1C3B,EAAM0C,UAAU,2BAA2B,YAczD,gCACA,oBAAI7B,MAAO,CAACM,MAAoB,SAAbnB,EAAME,KAAc,QAAQ,SAA/C,gDACA,0BAAUD,UAAU,qBAAqBK,GAAG,8BAA8B0B,KAAK,IAAIC,MAAOJ,EAAOK,SApCzE,SAACC,GACnBC,QAAQC,IAAI,aACZP,EAASK,EAAMG,OAAOL,QAkCiGpB,MAAO,CAAC0B,gBAA8B,SAAbvC,EAAME,KAAc,UAAU,QAASiB,MAAoB,SAAbnB,EAAME,KAAc,QAAQ,cAIzN,sBAAKD,UAAU,OAAf,UACI,oBAAIY,MAAO,CAACM,MAAoB,SAAbnB,EAAME,KAAc,QAAQ,SAA/C,uBAGA,cAAC+C,EAAD,CAAIhC,KAAMU,EAAMzB,KAAMF,EAAME,OAC5B,cAACgD,EAAD,CAAU5B,QAASK,EAAMH,KAAMK,EAAO3B,KAAMF,EAAME,cCnDhDiD,MARf,SAAenD,GACX,OACIA,EAAMmD,OAAS,sBAAKlD,UAAS,sBAAiBD,EAAMmD,MAAM9C,KAA7B,gCAAiE+C,KAAK,QAApF,UACf,iCAASpD,EAAMmD,MAAM9C,OADN,IACsBL,EAAMmD,MAAME,QCgC1C5C,MApCf,WACI,OACI,sBAAK6C,MAAM,aAAX,UACA,sBAAKA,MAAM,OAAX,UACE,qBAAKC,IAAI,MAAMD,MAAM,eAAeE,IAAI,QACxC,sBAAKF,MAAM,YAAX,UACE,oBAAIA,MAAM,aAAV,wBACA,mBAAGA,MAAM,YAAT,iJAEF,qBAAKA,MAAM,cAAX,SACE,uBAAOA,MAAM,aAAb,0CAGJ,sBAAKA,MAAM,OAAX,UACE,qBAAKC,IAAI,MAAMD,MAAM,eAAeE,IAAI,QACxC,sBAAKF,MAAM,YAAX,UACE,oBAAIA,MAAM,aAAV,wBACA,mBAAGA,MAAM,YAAT,gGAEF,qBAAKA,MAAM,cAAX,SACE,uBAAOA,MAAM,aAAb,0CAGJ,sBAAKA,MAAM,OAAX,UACE,qBAAKC,IAAI,MAAMD,MAAM,eAAeE,IAAI,QACxC,sBAAKF,MAAM,YAAX,UACE,oBAAIA,MAAM,aAAV,wBACA,mBAAGA,MAAM,YAAT,+LAEF,qBAAKA,MAAM,cAAX,SACE,uBAAOA,MAAM,aAAb,8C,OC2DGG,MA1Ef,WAEE,MAAqB/B,mBAAS,SAA9B,mBAAOxB,EAAP,KAAYwD,EAAZ,KACA,EAA4BhC,mBAAS,oBAArC,mBAAQZ,EAAR,KAAgB6C,EAAhB,KAEE,EAAyBjC,mBAAS,CAC9BP,MAAO,UADX,mBAAON,EAAP,KAAa+C,EAAb,KAqCA,EAAuBlC,mBAAS,MAAhC,mBAAOyB,EAAP,KAAaU,EAAb,KAEMnB,EAAU,SAACoB,EAAQzD,GACvBwD,EAAS,CACPR,IAAIS,EACJzD,KAAKA,IAGN0D,YAAW,WACTF,EAAS,QACR,MAIR,OACE,mCACA,eAAC,IAAD,WACA,cAACG,EAAD,CAAQ9D,KAAMA,EAAMS,WA/CH,WACH,UAAPT,GAEPwD,EAAQ,QACRC,EAAW,qBACXC,EAAW,CACPzC,MAAO,UAIX8C,SAASC,KAAKrD,MAAM0B,gBAAgB,UACtCG,EAAU,yBAAyB,aAIjCgB,EAAQ,SACRC,EAAW,oBACXC,EAAW,CACPzC,MAAO,UAIX8C,SAASC,KAAKrD,MAAM0B,gBAAgB,QACpCG,EAAU,0BAA0B,aAwBQ7B,MAAOA,EAAOC,QAASA,IAClE,cAACqD,EAAD,CAAOhB,MAAOA,IACd,eAAC,IAAD,WACK,cAAC,IAAD,CAAOiB,KAAK,SAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACA,cAACE,EAAD,CAAUvC,QAAQ,oBAAoB7B,KAAMA,EAAMwC,UAAWA,eCtExD6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,SAM1BZ,M","file":"static/js/main.0c15876f.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nfunction Nav(props){\r\n\r\n    \r\n    return (\r\n    <>\r\n     \r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.home}</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link active\" aria-current=\"page\" to=\"/about\">{props.about}</NavLink>\r\n          </li>\r\n        \r\n         \r\n        </ul>\r\n   \r\n  \r\n\r\n  <div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode} />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style={props.style}> {props.btntext} </label>\r\n  </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n  </>\r\n    );\r\n}\r\n\r\nNav.defaultProps={\r\n\r\n    title: 'TEXT-UTIL',\r\n    home: 'HOME',\r\n    about: 'ABOUT'\r\n\r\n};\r\nexport default Nav;","import React from 'react'\r\n\r\nfunction wordschar(props){\r\n    if(props.para.length==0)\r\n    return(\r\n        <p style={{color: props.mode==='dark'?'white':'black'}}> 0 words and 0 characters </p>\r\n    );\r\n    else\r\n    return(\r\n        <p style={{color: props.mode==='dark'?'white':'black'}}> {props.para.split(\" \").length} words and {props.para.length} characters </p>\r\n    );\r\n}\r\nexport default wordschar;","import React from 'react'\r\n\r\nfunction find(props){\r\n    if(props.content.includes(props.word))\r\n    return(\r\n        <p style={{color: props.mode==='dark'?'white':'black'}}>FOUND</p>\r\n    );\r\n    else\r\n    return(\r\n        <p style={{color: props.mode==='dark'?'white':'black'}}> NOT FOUND</p>\r\n    );\r\n}\r\nexport default find;","import React, {useState} from 'react';\r\nimport Wc from './Wc';\r\nimport Findtext from './Findtext';\r\n\r\nfunction Text(props){\r\n\r\n    const handleonclickupper=()=>{\r\n        console.log(\"button clicked for upper case\"+ text);\r\n        let newtext=text.toUpperCase();\r\n        setText(newtext);\r\n        props.showalert('converted to upper case :','success')\r\n    }\r\n    const handleonchange=(event)=>{\r\n        console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleonchange1=(event)=>{\r\n        console.log(\"on change\");\r\n        setText1(event.target.value);\r\n    }\r\n\r\n    const handleonclicklower=()=>{\r\n        console.log(\"button clicled for upper case\" +text);\r\n        let newtext=text.toLowerCase();\r\n        setText(newtext);\r\n        props.showalert('converted to lower case :','success')\r\n\r\n    }\r\n    const handlespaces =()=>{\r\n        let newtext = text.replace(/\\s+/g, ' ').trim()\r\n        setText(newtext);\r\n        props.showalert('cleared extra spaces :','success')\r\n        }\r\n        const handlecopy =(event)=>{\r\n                setText(event.target.value);\r\n                let newtext=navigator.clipboard.writeText(text);\r\n                props.showalert('text copied and cleared:','success')\r\n        };\r\n\r\n    const [text,setText]=useState('ENTER YOUR TEXT HERE');\r\n    const [text1,setText1]=useState('');\r\n    return (\r\n        <>\r\n        <div className=\"mb-3\">\r\n        <h1 style={{color: props.mode==='dark'?'white':'black'}}> {props.heading} </h1>\r\n  {/* <label HTMLFor=\"exampleFormControlTextarea1\" class=\"form-label\">Example textarea</label> */}\r\n  <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"10\" value={text} onChange={handleonchange} style={{backgroundColor: props.mode==='dark'?'#042743':'white', color: props.mode==='dark'?'white':'black'}}></textarea>\r\n  <button className=\"btn btn-primary\" onClick={handleonclickupper}> Convert to uppercase</button>\r\n  <button className=\"btn btn-primary\" onClick={handleonclicklower}> Convert to lowercase</button>\r\n  <button className=\"btn btn-primary\" onClick={handlespaces}> Clear extra spaces</button>\r\n  <button className=\"btn btn-primary\" onClick={handlecopy}> Copy & Clear Text</button>\r\n  <h4 style={{color: props.mode==='dark'?'white':'black'}}> Type the word you want to search </h4> \r\n  <textarea className=\"form-control form1\" id=\"exampleFormControlTextarea1\" rows=\"1\" value={text1} onChange={handleonchange1}  style={{backgroundColor: props.mode==='dark'?'#042743':'white', color: props.mode==='dark'?'white':'black'}}></textarea>\r\n\r\n         </div>\r\n\r\n         <div className=\"mb-3\">\r\n             <h2 style={{color: props.mode==='dark'?'white':'black'}}> SUMMARY </h2>\r\n             \r\n             {/* For words and characters count */}\r\n             <Wc para={text} mode={props.mode}/>  \r\n             <Findtext content={text} word={text1} mode={props.mode} />\r\n\r\n             {/* <h2 style={{color: props.mode==='dark'?'white':'black'}}> PREVIEW</h2>\r\n             <p style={{color: props.mode==='dark'?'white':'black'}}> {text} </p> */}\r\n\r\n         </div>\r\n      </>\r\n\r\n    );\r\n}\r\n\r\nexport default Text;","import React from 'react'\r\n\r\nfunction alert(props){\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong> {props.alert.msg}\r\n   \r\n      </div>\r\n    )\r\n}\r\nexport default alert;","import React from 'react'\r\nfunction about(){\r\n    return(\r\n        <div class=\"card-group\">\r\n        <div class=\"card\">\r\n          <img src=\"...\" class=\"card-img-top\" alt=\"...\"/>\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Card title</h5>\r\n            <p class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n          </div>\r\n          <div class=\"card-footer\">\r\n            <small class=\"text-muted\">Last updated 3 mins ago</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"card\">\r\n          <img src=\"...\" class=\"card-img-top\" alt=\"...\"/>\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Card title</h5>\r\n            <p class=\"card-text\">This card has supporting text below as a natural lead-in to additional content.</p>\r\n          </div>\r\n          <div class=\"card-footer\">\r\n            <small class=\"text-muted\">Last updated 3 mins ago</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"card\">\r\n          <img src=\"...\" class=\"card-img-top\" alt=\"...\"/>\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Card title</h5>\r\n            <p class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.</p>\r\n          </div>\r\n          <div class=\"card-footer\">\r\n            <small class=\"text-muted\">Last updated 3 mins ago</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\nexport default about;","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\nimport { useState } from 'react';\nimport Alert from './Components/Alert'\nimport About from './Components/About';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const [mode,setmode]=useState('light');    //for body \n  const  [btntext,setbtntext]=useState('Enable dark mode');          //for button \n\n    const [style,setmystyle]=useState({      //for button color\n        color: 'black',\n    }\n    );\n\n\n\n    const togglemode=()=>{ \n        if(mode==='light')\n    {\n    setmode('dark');\n    setbtntext('Enable light mode');\n    setmystyle({\n        color: 'white',\n    })\n  \n\n    document.body.style.backgroundColor='#042743';\n  showalert('switched to dark mode:','success')\n      }\n    else\n    {\n    setmode('light');\n    setbtntext('Enable dark mode');\n    setmystyle({\n        color: 'black',\n    })\n    \n\n    document.body.style.backgroundColor='white';\n    showalert('switched to light mode:','success')\n     }\n     \n\n    }\n\n\n    const [alert,setAlert]=useState(null);    //for alert \n\n    const showalert=(message,type)=>{\n      setAlert({\n        msg:message,\n        type:type,\n      })\n\n       setTimeout(() => {\n         setAlert(null);\n       }, 800);\n    }\n\n  \n  return (\n    <>\n    <Router>\n    <Navbar mode={mode} togglemode={togglemode} style={style} btntext={btntext}/>\n     <Alert alert={alert} />\n     <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n          <Textform heading=\"Analyze your text\" mode={mode} showalert={showalert}/>\n          </Route>\n        </Switch>\n    </Router>\n     </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}